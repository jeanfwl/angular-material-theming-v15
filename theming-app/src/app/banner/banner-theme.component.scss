@use "@angular/material" as mat;
@use "@material/density";

@mixin _apply-banner-color($color) {
  & {
    @include mat.overridable-elevation(
      4,
      mat.get-color-from-palette($color, darker)
    );
  }
  .header {
    background-color: mat.get-color-from-palette($color, default);
    color: mat.get-color-from-palette($color, default-contrast);
  }
  .content {
    background-color: mat.get-color-from-palette($color, 50);
    color: mat.get-color-from-palette($color, 50-contrast);
  }
}

@mixin color($color-config) {
  $primary: map-get($color-config, primary);
  $accent: map-get($color-config, accent);
  $warn: map-get($color-config, warn);
  $success: map-get($color-config, success);

  .app-banner {
    &.primary-banner {
      @include _apply-banner-color($primary);
    }
    &.accent-banner {
      @include _apply-banner-color($accent);
    }
    &.warn-banner {
      @include _apply-banner-color($warn);
    }
    @if $success != null {
      &.success-banner {
        @include _apply-banner-color($success);
      }
    }
  }
}

@mixin typography($typography-config) {
  .app-banner {
    .header h2 {
      @include mat.typography-level($typography-config, headline-6);
    }
    .content p {
      @include mat.typography-level($typography-config, body-2);
    }
  }
}

@mixin density($density-scale) {
  $density-config: (
    height: (
      default: 150px,
      minimum: 130px,
      maximum: 165px,
    ),
  );

  .app-banner {
    height: density.prop-value($density-config, $density-scale, height);
  }
}

@mixin theme($theme-config) {
  // retorna o map color: ( primary, accent, ... ) do tema.
  $color-config: mat.get-color-config($theme-config);
  $typography-config: mat.get-typography-config($theme-config);
  $density-scale: mat.get-density-config($theme-config);

  @if $color-config != null {
    @include color($color-config);
  }
  @if $typography-config != null {
    @include typography($typography-config);
  }
  @if $density-scale != null {
    @include density($density-scale);
  }
}
